jurisdiction = as_factor(jurisdiction),
status = as_factor(status),
state = jurisdiction
)
#| label: print-most-bills
print(state_count, n = 10)
#| label: print-most-bills
head(state_count, n = 10)
#| label: count-pass
plot_usmap(data = state_count, values = "n") +
scale_fill_continuous(low = "white", high = "green", name = "Number of States") +
labs(title = "New England Region", subtitle = "Poverty Percentage Estimates for New England Counties in 2014") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = NULL) +
scale_fill_continuous(low = "white", high = "green", name = "Number of States") +
labs(title = "New England Region", subtitle = "Poverty Percentage Estimates for New England Counties in 2014") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "none") +
scale_fill_continuous(low = "white", high = "green", name = "Number of States") +
labs(title = "New England Region", subtitle = "Poverty Percentage Estimates for New England Counties in 2014") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "#ffffff") +
scale_fill_continuous(low = "white", high = "green", name = "Number of States") +
labs(title = "New England Region", subtitle = "Poverty Percentage Estimates for New England Counties in 2014") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "#999") +
scale_fill_continuous(low = "white", high = "green", name = "Number of States") +
labs(title = "New England Region", subtitle = "Poverty Percentage Estimates for New England Counties in 2014") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "#999999") +
scale_fill_continuous(low = "white", high = "green", name = "Number of States") +
labs(title = "New England Region", subtitle = "Poverty Percentage Estimates for New England Counties in 2014") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "#999999") +
scale_fill_continuous(low = "white", high = "green", name = "Number of Bills") +
labs(title = "New England Region", subtitle = "Poverty Percentage Estimates for New England Counties in 2014") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "#999999") +
scale_fill_continuous(low = "white", high = "green", name = "Number of Bills") +
labs(title = "States that regulate social media", subtitle = "Poverty Percentage Estimates for New England Counties in 2014") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "#999999") +
scale_fill_continuous(low = "white", high = "green", name = "Number of Bills") +
labs(title = "States Bills Regulating Social Media in 2024") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "#999999") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "States Bills Regulating Social Media in 2024") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "#333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "States Bills Regulating Social Media in 2024") +
theme(legend.position = "right")
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "States Bills Regulating Social Media in 2024") +
theme(legend.position = "right")
#| label: data-clean
#| output: false
state_none <- state_24 |>
filter(number != "None",
number != "No regular 2024 session")
state_24 <- state_24 |>
filter(number != "None",
number != "No regular 2024 session") |>
mutate(
status = fct_relevel(
status, "Enacted", "To governor", "Adopted", "Pending", "Pending - Carryover", "Failed - Adjourned", "Failed", "Vetoed",
)
)
levels(state_24$status)
#| label: count-pass
plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's with Bills Regulating Social Media in 2024") +
theme(legend.position = "right")
#| label: bill-reg-vis
plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's with Bills Regulating Social Media in 2024") +
theme(legend.position = "right")
#| label: bill-reg-vis
plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's with Bills Regulating Social Media in 2024",
caption = "States with no bills have a gray fill") +
theme(legend.position = "right")
#| label: bill-reg-vis
plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's with Bills Regulating Social Media in 2024",
subtitle = "States with no bills have a gray fill",
caption = "Source: National Conference of State Legislatures") +
theme(legend.position = "right")
#| label: bill-reg-vis
plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's with Bills Regulating Social Media in 2024",
subtitle = "States with No Bills have a gray fill",
caption = "Source: National Conference of State Legislatures") +
theme(legend.position = "right")
#| label: bill-reg-vis
plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's with Bills Regulating Social Media in 2024",
subtitle = "States with No Bills have a gray fill",
caption = "Source: National Conference of State Legislatures. Made by: SPRING Program on Health and Society") +
theme(legend.position = "right")
#| label: bill-reg-vis
plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's with Bills Regulating Social Media in 2024",
subtitle = "States with No Bills have a gray fill",
caption = "Source: National Conference of State Legislatures. Author: SPRING Program on Health and Society") +
theme(legend.position = "right")
#| label: bill-reg-vis
plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's with Bills Regulating Social Media in 2024",
subtitle = "States with No Bills have a gray fill",
caption = "SOURCE: National Conference of State Legislatures. AUTHOR: SPRING Program on Health and Society") +
theme(legend.position = "right")
#| label: bill-reg-vis
plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's with Bills Regulating Social Media in 2024",
subtitle = "States with No Bills have a Gray Fill",
caption = "SOURCE: National Conference of State Legislatures. AUTHOR: SPRING Program on Health and Society") +
theme(legend.position = "right")
#| label: state-pass-vis
plot_usmap(data = state_passed, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's that Passed Bills on Social Media",
subtitle = "States with No Bills have a Gray Fill",
caption = "SOURCE: National Conference of State Legislatures. AUTHOR: SPRING Program on Health and Society") +
theme(legend.position = "right")
#| label: print-most-bills
head(state_count, n = 10)
#| label: print-most-bills-passed
head(state_passed, n = 10)
#| label: print-most-bills-passed
head(state_passed, n = 20)
write_csv(data, "state-leg-comp-24.csv", row.names = FALSE)
write.csv(data, "state-leg-comp-24.csv", row.names = FALSE)
data <- tibble(
STATE = c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut",
"Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa",
"Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan",
"Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
"New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
"Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia",
"Wisconsin", "Wyoming"),
Total_Seats = c(140, 60, 90, 135, 120, 100, 187, 62, 160, 236, 76, 105, 177, 150, 150, 165, 138,
144, 186, 188, 200, 148, 201, 174, 197, 150, 49, 63, 424, 120, 112, 213, 170, 141,
132, 149, 90, 253, 113, 170, 105, 132, 181, 104, 180, 140, 147, 134, 132, 93),
Total_Senate = c(35, 20, 30, 35, 40, 35, 36, 21, 40, 56, 25, 35, 59, 50, 50, 40, 38, 39, 35, 47,
40, 38, 67, 52, 34, 50, 49, 21, 24, 40, 42, 63, 50, 47, 33, 48, 30, 50, 38, 46, 35,
33, 31, 29, 30, 40, 49, 34, 33, 31),
Senate_Dem = c(8, 9, 14, 6, 31, 23, 24, 15, 12, 23, 23, 7, 40, 10, 16, 11, 7, 11, 22, 34, 36, 20, 33,
16, 7, 16, 0, 13, 10, 25, 27, 41, 20, 4, 7, 8, 17, 22, 32, 15, 4, 6, 12, 6, 21, 21, 28,
3, 10, 2),
Senate_Rep = c(27, 11, 16, 29, 9, 12, 12, 6, 28, 33, 2, 28, 19, 40, 33, 29, 31, 28, 13, 13, 4, 18,
33, 36, 23, 34, 0, 7, 14, 15, 15, 21, 30, 43, 26, 40, 12, 28, 5, 30, 31, 27, 19, 23, 7,
19, 20, 31, 22, 29),
Total_House = c(105, 40, 60, 100, 80, 65, 151, 41, 120, 180, 51, 70, 118, 100, 100, 125, 100, 105,
151, 141, 160, 110, 134, 122, 163, 100, 0, 42, 400, 80, 70, 150, 120, 94, 99, 101,
60, 203, 75, 124, 70, 99, 150, 75, 150, 100, 98, 100, 99, 62),
House_Dem = c(29, 13, 29, 18, 62, 46, 98, 26, 36, 78, 45, 11, 78, 30, 36, 40, 20, 32, 79, 102, 132,
56, 68, 41, 51, 32, 0, 26, 191, 52, 45, 100, 48, 12, 32, 20, 35, 102, 65, 35, 7, 24, 63,
14, 104, 51, 58, 11, 34, 5),
House_Rep = c(76, 22, 31, 82, 17, 19, 53, 15, 83, 102, 6, 59, 40, 70, 64, 85, 80, 73, 67, 39, 25, 54,
63, 79, 111, 68, 0, 14, 197, 28, 25, 48, 72, 82, 67, 81, 24, 101, 9, 87, 63, 75, 86, 61,
37, 49, 40, 89, 64, 57),
Leg_Control = c("Rep", "Rep", "Rep", "Rep", "Dem", "Dem", "Dem", "Dem", "Rep", "Rep", "Dem", "Rep",
"Dem", "Rep", "Rep", "Rep", "Rep", "Rep", "Dem", "Dem", "Dem", "Dem", "Divided",
"Rep", "Rep", "Rep", "Unicameral", "Dem", "Rep", "Dem", "Dem", "Dem", "Rep", "Rep",
"Rep", "Rep", "Dem", "Divided", "Dem", "Rep", "Rep", "Rep", "Rep", "Rep", "Divided",
"Dem", "Dem", "Rep", "Rep", "Rep"),
Gov_Party = c("Rep", "Rep", "Dem", "Rep", "Dem", "Dem", "Dem", "Dem", "Rep", "Rep", "Dem", "Rep",
"Dem", "Rep", "Rep", "Dem", "Dem", "Rep", "Dem", "Dem", "Dem", "Dem", "Dem", "Rep",
"Rep", "Rep", "N/A", "Rep", "Rep", "Dem", "Dem", "Dem", "Dem", "Rep", "Rep", "Rep",
"Dem", "Dem", "Dem", "Rep", "Rep", "Rep", "Rep", "Dem", "Rep", "Dem", "Dem", "Rep",
"Dem", "Rep"),
State_Control = c("Rep", "Rep", "Divided", "Rep", "Dem", "Dem", "Dem", "Dem", "Rep", "Rep", "Dem",
"Rep", "Dem", "Rep", "Rep", "Divided", "Divided", "Rep", "Dem", "Dem", "Dem",
"Dem", "Divided", "Rep", "Rep", "Rep", "N/A", "Divided", "Rep", "Dem", "Dem",
"Dem", "Divided", "Rep", "Rep", "Rep", "Dem", "Divided", "Dem", "Rep", "Rep",
"Rep", "Rep", "Divided", "Dem", "Dem", "Rep", "Divided", "Divided", "Rep")
)
data <- data.frame(
STATE = c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut",
"Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa",
"Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan",
"Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
"New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
"Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia",
"Wisconsin", "Wyoming"),
Total_Seats = c(140, 60, 90, 135, 120, 100, 187, 62, 160, 236, 76, 105, 177, 150, 150, 165, 138,
144, 186, 188, 200, 148, 201, 174, 197, 150, 49, 63, 424, 120, 112, 213, 170, 141,
132, 149, 90, 253, 113, 170, 105, 132, 181, 104, 180, 140, 147, 134, 132, 93),
Total_Senate = c(35, 20, 30, 35, 40, 35, 36, 21, 40, 56, 25, 35, 59, 50, 50, 40, 38, 39, 35, 47,
40, 38, 67, 52, 34, 50, 49, 21, 24, 40, 42, 63, 50, 47, 33, 48, 30, 50, 38, 46, 35,
33, 31, 29, 30, 40, 49, 34, 33, 31),
Senate_Dem = c(8, 9, 14, 6, 31, 23, 24, 15, 12, 23, 23, 7, 40, 10, 16, 11, 7, 11, 22, 34, 36, 20, 33,
16, 7, 16, 0, 13, 10, 25, 27, 41, 20, 4, 7, 8, 17, 22, 32, 15, 4, 6, 12, 6, 21, 21, 28,
3, 10, 2),
Senate_Rep = c(27, 11, 16, 29, 9, 12, 12, 6, 28, 33, 2, 28, 19, 40, 33, 29, 31, 28, 13, 13, 4, 18,
33, 36, 23, 34, 0, 7, 14, 15, 15, 21, 30, 43, 26, 40, 12, 28, 5, 30, 31, 27, 19, 23, 7,
19, 20, 31, 22, 29),
Total_House = c(105, 40, 60, 100, 80, 65, 151, 41, 120, 180, 51, 70, 118, 100, 100, 125, 100, 105,
151, 141, 160, 110, 134, 122, 163, 100, 0, 42, 400, 80, 70, 150, 120, 94, 99, 101,
60, 203, 75, 124, 70, 99, 150, 75, 150, 100, 98, 100, 99, 62),
House_Dem = c(29, 13, 29, 18, 62, 46, 98, 26, 36, 78, 45, 11, 78, 30, 36, 40, 20, 32, 79, 102, 132,
56, 68, 41, 51, 32, 0, 26, 191, 52, 45, 100, 48, 12, 32, 20, 35, 102, 65, 35, 7, 24, 63,
14, 104, 51, 58, 11, 34, 5),
House_Rep = c(76, 22, 31, 82, 17, 19, 53, 15, 83, 102, 6, 59, 40, 70, 64, 85, 80, 73, 67, 39, 25, 54,
63, 79, 111, 68, 0, 14, 197, 28, 25, 48, 72, 82, 67, 81, 24, 101, 9, 87, 63, 75, 86, 61,
37, 49, 40, 89, 64, 57),
Leg_Control = c("Rep", "Rep", "Rep", "Rep", "Dem", "Dem", "Dem", "Dem", "Rep", "Rep", "Dem", "Rep",
"Dem", "Rep", "Rep", "Rep", "Rep", "Rep", "Dem", "Dem", "Dem", "Dem", "Divided",
"Rep", "Rep", "Rep", "Unicameral", "Dem", "Rep", "Dem", "Dem", "Dem", "Rep", "Rep",
"Rep", "Rep", "Dem", "Divided", "Dem", "Rep", "Rep", "Rep", "Rep", "Rep", "Divided",
"Dem", "Dem", "Rep", "Rep", "Rep"),
Gov_Party = c("Rep", "Rep", "Dem", "Rep", "Dem", "Dem", "Dem", "Dem", "Rep", "Rep", "Dem", "Rep",
"Dem", "Rep", "Rep", "Dem", "Dem", "Rep", "Dem", "Dem", "Dem", "Dem", "Dem", "Rep",
"Rep", "Rep", "N/A", "Rep", "Rep", "Dem", "Dem", "Dem", "Dem", "Rep", "Rep", "Rep",
"Dem", "Dem", "Dem", "Rep", "Rep", "Rep", "Rep", "Dem", "Rep", "Dem", "Dem", "Rep",
"Dem", "Rep"),
State_Control = c("Rep", "Rep", "Divided", "Rep", "Dem", "Dem", "Dem", "Dem", "Rep", "Rep", "Dem",
"Rep", "Dem", "Rep", "Rep", "Divided", "Divided", "Rep", "Dem", "Dem", "Dem",
"Dem", "Divided", "Rep", "Rep", "Rep", "N/A", "Divided", "Rep", "Dem", "Dem",
"Dem", "Divided", "Rep", "Rep", "Rep", "Dem", "Divided", "Dem", "Rep", "Rep",
"Rep", "Rep", "Divided", "Dem", "Dem", "Rep", "Divided", "Divided", "Rep")
)
write.csv(data, "data/state-leg-comp-24.csv", row.names = FALSE)
#| label: legislation-status
#| output: false
state_count <- state_24 |>
count(state, sort = "TRUE") |>
left_join(state_leg_comp_24) |>
state_count
#| label: legislation-status
#| output: false
state_count <- state_24 |>
count(state, sort = "TRUE") |>
left_join(state_leg_comp_24)
#| label: add-library
#| echo: false
#| output: false
library(tidyverse)
library(usmap)
#| label: data-read-in
#| output: false
state_leg_comp_24 <- read_csv("data/state-leg-comp-24.csv")
state_24 <- read_csv("data/state-sm-24")
state_24 |>
distinct(jurisdiction) |>
pull(jurisdiction)
state_24 |>
distinct(status) |>
pull(status)
state_24 <- state_24 |>
mutate(
jurisdiction = as_factor(jurisdiction),
status = as_factor(status),
state = jurisdiction
)
#| label: data-clean
#| output: false
state_none <- state_24 |>
filter(number != "None",
number != "No regular 2024 session")
state_24 <- state_24 |>
filter(number != "None",
number != "No regular 2024 session") |>
mutate(
status = fct_relevel(
status, "Enacted", "To governor", "Adopted", "Pending", "Pending - Carryover", "Failed - Adjourned", "Failed", "Vetoed",
)
)
levels(state_24$status)
#| label: legislation-status
#| output: false
state_count <- state_24 |>
count(state, sort = "TRUE") |>
left_join(state_leg_comp_24)
#| label: data-read-in
#| output: false
state_leg_comp_24 <- read_csv("data/state-leg-comp-24.csv")
state_leg_comp_24
state_24 <- read_csv("data/state-sm-24")
state_24 |>
distinct(jurisdiction) |>
pull(jurisdiction)
state_24 |>
distinct(status) |>
pull(status)
state_24 <- state_24 |>
mutate(
jurisdiction = as_factor(jurisdiction),
status = as_factor(status),
state = jurisdiction
)
#| label: data-read-in
#| output: false
state_leg_comp_24 <- read_csv("data/state-leg-comp-24.csv")
state_leg_comp_24 |>
mutate(STATE = as.factor(STATE)) |>
rename(state = state)
#| label: data-read-in
#| output: false
state_leg_comp_24 <- read_csv("data/state-leg-comp-24.csv")
state_leg_comp_24 |>
mutate(STATE = as.factor(STATE)) |>
rename(state = "STATE")
state_leg_comp_24
state_24 <- read_csv("data/state-sm-24")
state_24 |>
distinct(jurisdiction) |>
pull(jurisdiction)
state_24 |>
distinct(status) |>
pull(status)
state_24 <- state_24 |>
mutate(
jurisdiction = as_factor(jurisdiction),
status = as_factor(status),
state = jurisdiction
)
#| label: data-read-in
#| output: false
state_leg_comp_24 <- read_csv("data/state-leg-comp-24.csv")
state_leg_comp_24 <- state_leg_comp_24 |>
mutate(STATE = as.factor(STATE)) |>
rename(state = "STATE")
state_leg_comp_24
state_24 <- read_csv("data/state-sm-24")
state_24 |>
distinct(jurisdiction) |>
pull(jurisdiction)
state_24 |>
distinct(status) |>
pull(status)
state_24 <- state_24 |>
mutate(
jurisdiction = as_factor(jurisdiction),
status = as_factor(status),
state = jurisdiction
)
#| label: data-read-in
#| output: false
state_leg_comp_24 <- read_csv("data/state-leg-comp-24.csv")
state_leg_comp_24 <- state_leg_comp_24 |>
mutate(STATE = as.factor(STATE)) |>
rename(state = "STATE")
state_24 <- read_csv("data/state-sm-24")
state_24 |>
distinct(jurisdiction) |>
pull(jurisdiction)
state_24 |>
distinct(status) |>
pull(status)
state_24 <- state_24 |>
mutate(
jurisdiction = as_factor(jurisdiction),
status = as_factor(status),
state = jurisdiction
)
#| label: legislation-status
#| output: false
state_count <- state_24 |>
count(state, sort = "TRUE") |>
left_join(state_leg_comp_24)
state_count
state_passed <- state_24 |>
filter(status == "Enacted" ) |>
count(state, sort = "TRUE") |>
write_csv("results/state-passed.csv")
state_passed
#| label: legislation-status
#| output: false
state_count <- state_24 |>
count(state, sort = "TRUE") |>
left_join(state_leg_comp_24) |>
select(state, n, Leg_Control)
state_count
state_passed <- state_24 |>
filter(status == "Enacted" ) |>
count(state, sort = "TRUE") |>
write_csv("results/state-passed.csv")
state_passed
#| label: legislation-status
#| output: false
state_count <- state_24 |>
count(state, sort = "TRUE") |>
left_join(state_leg_comp_24) |>
select(state, n, Leg_Control) |>
write_csv("results/state-count-24.csv")
state_count
state_passed <- state_24 |>
filter(status == "Enacted" ) |>
count(state, sort = "TRUE") |>
left_join(state_leg_comp_24) |>
select(state, n, Leg_Control) |>
write_csv("results/state-passed.csv")
state_passed
#| label: print-most-bills
head(state_count, n = 10)
#| label: print-most-bills-passed
head(state_passed, n = 20)
install.packages("patchwork")
#| label: state-pass-vis
bill_pass_plot <- plot_usmap(data = state_passed, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's that Passed Bills on Social Media",
subtitle = "States with No Bills have a Gray Fill",
caption = "SOURCE: National Conference of State Legislatures") +
theme(legend.position = "right")
#| label: add-library
#| echo: false
#| output: false
library(tidyverse)
library(usmap)
library(patchwork)
#| label: data-read-in
#| output: false
state_leg_comp_24 <- read_csv("data/state-leg-comp-24.csv")
state_leg_comp_24 <- state_leg_comp_24 |>
mutate(STATE = as.factor(STATE)) |>
rename(state = "STATE")
state_24 <- read_csv("data/state-sm-24")
state_24 |>
distinct(jurisdiction) |>
pull(jurisdiction)
state_24 |>
distinct(status) |>
pull(status)
state_24 <- state_24 |>
mutate(
jurisdiction = as_factor(jurisdiction),
status = as_factor(status),
state = jurisdiction
)
#| label: data-clean
#| output: false
state_none <- state_24 |>
filter(number != "None",
number != "No regular 2024 session")
state_24 <- state_24 |>
filter(number != "None",
number != "No regular 2024 session") |>
mutate(
status = fct_relevel(
status, "Enacted", "To governor", "Adopted", "Pending", "Pending - Carryover", "Failed - Adjourned", "Failed", "Vetoed",
)
)
levels(state_24$status)
#| label: legislation-status
#| output: false
state_count <- state_24 |>
count(state, sort = "TRUE") |>
left_join(state_leg_comp_24) |>
select(state, n, Leg_Control) |>
write_csv("results/state-count-24.csv")
state_count
state_passed <- state_24 |>
filter(status == "Enacted" ) |>
count(state, sort = "TRUE") |>
left_join(state_leg_comp_24) |>
select(state, n, Leg_Control) |>
write_csv("results/state-passed.csv")
state_passed
#| label: bill-reg-vis
bill_count_plot <- plot_usmap(data = state_count, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's with Bills Regulating Social Media in 2024",
subtitle = "States with No Bills have a Gray Fill",
caption = "SOURCE: National Conference of State Legislatures") +
theme(legend.position = "right")
#| label: state-pass-vis
bill_pass_plot <- plot_usmap(data = state_passed, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's that Passed Bills on Social Media",
subtitle = "States with No Bills have a Gray Fill",
caption = "SOURCE: National Conference of State Legislatures") +
theme(legend.position = "right")
bill_count_plot + bill_pass_plot
#| label: state-pass-vis
#| fig-width: 8
bill_pass_plot <- plot_usmap(data = state_passed, values = "n", color = "#333333") +
scale_fill_continuous(low = "white", high = "#416555", name = "Number of Bills") +
labs(title = "State's that Passed Bills on Social Media",
subtitle = "States with No Bills have a Gray Fill",
caption = "SOURCE: National Conference of State Legislatures") +
theme(legend.position = "right")
bill_count_plot + bill_pass_plot
#| label: state-count-party
state_count |>
count(Leg_Control)
